#define _USE_MATH_DEFINES  // Включаем математические константы (M_PI) для Windows
#include "geo.h"

#include <cmath>

namespace geo {

/**
 * РЕАЛИЗАЦИЯ ВЫЧИСЛЕНИЯ РАССТОЯНИЯ ПО ФОРМУЛЕ ГАВЕРСИНУСОВ
 * 
 * Формула основана на сферической геометрии и вычисляет кратчайшее расстояние
 * между двумя точками на поверхности сферы (в нашем случае - Земли).
 * 
 * МАТЕМАТИЧЕСКАЯ ОСНОВА:
 * d = arccos(sin(φ₁) × sin(φ₂) + cos(φ₁) × cos(φ₂) × cos(Δλ)) × R
 * 
 * где:
 * φ₁, φ₂ - широты точек в радианах
 * Δλ - разность долгот в радианах
 * R - радиус Земли (≈ 6371 км = 6371000 м)
 * 
 * ЭТАПЫ ВЫЧИСЛЕНИЯ:
 * 1. Преобразование градусов в радианы
 * 2. Вычисление синусов и косинусов широт
 * 3. Вычисление косинуса разности долгот
 * 4. Применение формулы арккосинуса
 * 5. Умножение на радиус Земли для получения расстояния в метрах
 */
double ComputeDistance(Coordinates from, Coordinates to) {
	using namespace std;
	
	// Коэффициент для преобразования градусов в радианы
	// π/180 ≈ 0.017453292519943295
	const double degrees_to_radians = M_PI / 180.0;
	
	// Применяем формулу гаверсинусов:
	// 1. Преобразуем координаты в радианы и вычисляем тригонометрические функции
	// 2. sin(φ₁) × sin(φ₂) - произведение синусов широт
	// 3. cos(φ₁) × cos(φ₂) - произведение косинусов широт  
	// 4. cos(|Δλ|) - косинус модуля разности долгот
	// 5. arccos(...) - обратный косинус даёт угол в радианах
	// 6. × 6371000 - умножение на радиус Земли в метрах
	return acos(sin(from.latitude * degrees_to_radians) * sin(to.latitude * degrees_to_radians)
					+ cos(from.latitude * degrees_to_radians) * cos(to.latitude * degrees_to_radians) 
					* cos(abs(from.longitude - to.longitude) * degrees_to_radians))
					* 6371000;  // Радиус Земли в метрах
}

}  // namespace geo 