#pragma once

/*
 * ДОМЕН ТРАНСПОРТНОГО КАТАЛОГА
 * 
 * Файл содержит основные структуры данных для транспортного каталога:
 * - Stop: представляет остановку общественного транспорта
 * - Bus: представляет автобусный маршрут
 * 
 * Эти структуры являются основой всей системы и используются
 * во всех остальных компонентах программы.
 */

#include "geo.h"
#include <string>
#include <vector>

namespace transport {
	
	/**
	 * СТРУКТУРА ОСТАНОВКИ (Stop)
	 * 
	 * Представляет остановку общественного транспорта в городе.
	 * Каждая остановка имеет уникальное имя и географические координаты.
	 * 
	 * Остановки используются для построения маршрутов автобусов
	 * и вычисления расстояний между точками.
	 */
	struct Stop {
		/**
		 * Оператор сравнения остановок
		 * Две остановки считаются равными, если у них одинаковые:
		 * - Имя (name)
		 * - Координаты (coordinates)
		 */
		bool operator==(const Stop &stop) const {
			return name == stop.name && coordinates == stop.coordinates;
		}

		std::string name;               // Название остановки (например, "Метро Сокольники")
		geo::Coordinates coordinates;   // Географические координаты (широта, долгота)
   };

   /**
    * СТРУКТУРА АВТОБУСНОГО МАРШРУТА (Bus)
    * 
    * Представляет автобусный маршрут в транспортной системе.
    * Маршрут состоит из упорядоченного списка остановок и может быть
    * кольцевым (возвращается к первой остановке) или линейным.
    * 
    * Используется для:
    * - Хранения информации о маршрутах
    * - Вычисления длины и времени поездки
    * - Отображения на карте
    */
   struct Bus {
      /**
       * Оператор сравнения маршрутов
       * Два маршрута считаются равными, если у них одинаковые:
       * - Номер маршрута (number)
       * - Список остановок (stop_list)
       */
      bool operator==(const Bus &bus) const {
         return number == bus.number && stop_list == bus.stop_list;
      }

      std::string number;                    // Номер маршрута (например, "14", "АТ-1")
      std::vector<const Stop *> stop_list;   // Упорядоченный список указателей на остановки
      bool is_roundtrip = false;             // true = кольцевой маршрут, false = линейный
   };
} 