#pragma once

/*
 * ГЕОГРАФИЧЕСКИЕ ВЫЧИСЛЕНИЯ ДЛЯ ТРАНСПОРТНОГО КАТАЛОГА
 * 
 * Модуль содержит структуры и функции для работы с географическими координатами:
 * - Представление координат (широта/долгота)
 * - Вычисление расстояний между точками на земной поверхности
 * 
 * ИСПОЛЬЗУЕМЫЕ АЛГОРИТМЫ:
 * - Формула гаверсинусов для вычисления расстояний по большому кругу
 * - Учет кривизны земной поверхности для точных расчетов
 */

#include <cmath>

namespace geo {
	
	/**
	 * СТРУКТУРА ГЕОГРАФИЧЕСКИХ КООРДИНАТ
	 * 
	 * Представляет точку на земной поверхности в градусах:
	 * - latitude: широта (-90° до +90°, отрицательные значения = южная широта)
	 * - longitude: долгота (-180° до +180°, отрицательные значения = западная долгота)
	 * 
	 * ПРИМЕРЫ:
	 * - Москва: {55.7558, 37.6176}
	 * - Санкт-Петербург: {59.9311, 30.3609}
	 * - Лондон: {51.5074, -0.1278}
	 */
	struct Coordinates {
		double latitude;   // Широта в градусах (север = положительные значения)
		double longitude;  // Долгота в градусах (восток = положительные значения)

		/**
		 * Оператор точного сравнения координат
		 * ВНИМАНИЕ: Использует точное сравнение double значений!
		 * В реальных приложениях может потребоваться сравнение с погрешностью
		 */
		constexpr bool operator==(const Coordinates& other) const noexcept {
			return latitude == other.latitude && longitude == other.longitude;
		}

		/**
		 * Оператор неравенства координат
		 */
		constexpr bool operator!=(const Coordinates& other) const noexcept {
			return !(*this == other);
		}
	};

	/**
	 * ВЫЧИСЛЕНИЕ РАССТОЯНИЯ МЕЖДУ ДВУМЯ ТОЧКАМИ НА ЗЕМЛЕ
	 * 
	 * Использует формулу гаверсинусов для вычисления кратчайшего расстояния
	 * между двумя точками на поверхности сферы (приближение для Земли).
	 * 
	 * ПРИНЦИП РАБОТЫ:
	 * 1. Переводит градусы в радианы
	 * 2. Применяет формулу гаверсинусов
	 * 3. Умножает на радиус Земли (≈6371 км)
	 * 
	 * ТОЧНОСТЬ:
	 * - Погрешность до 0.5% для большинства расстояний
	 * - Лучше работает для коротких расстояний (< 1000 км)
	 * - Предполагает сферическую форму Земли
	 * 
	 * @param from Начальная точка
	 * @param to Конечная точка
	 * @return Расстояние в метрах
	 */
	double ComputeDistance(Coordinates from, Coordinates to);
} 