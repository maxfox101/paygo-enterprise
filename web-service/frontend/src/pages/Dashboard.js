import React, { useState, useEffect } from 'react';
import './Dashboard.css';

const Dashboard = () => {
  const [currencyRates, setCurrencyRates] = useState([
    { symbol: '$', name: 'USD', rate: '91.45 ‚ÇΩ', change: '-0.23%', positive: false },
    { symbol: '‚Ç¨', name: 'EUR', rate: '98.72 ‚ÇΩ', change: '+0.15%', positive: true },
    { symbol: '¬•', name: 'CNY', rate: '12.63 ‚ÇΩ', change: '+0.42%', positive: true },
  ]);

  const quickActions = [
    { icon: 'üîÑ', title: '–ü–µ—Ä–µ–≤–æ–¥', desc: '–ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤', color: 'linear-gradient(135deg, #ff6b35, #f7931e)' },
    { icon: 'üí≥', title: '–ü–ª–∞—Ç–µ–∂–∏', desc: '–û–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥ –∏ —Ç–æ–≤–∞—Ä–æ–≤', color: 'linear-gradient(135deg, #3b82f6, #1d4ed8)' },
    { icon: 'üìä', title: '–ò—Å—Ç–æ—Ä–∏—è', desc: '–ü—Ä–æ—Å–º–æ—Ç—Ä –æ–ø–µ—Ä–∞—Ü–∏–π', color: 'linear-gradient(135deg, #10b981, #059669)' },
    { icon: '‚≠ê', title: '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', desc: '–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø', color: 'linear-gradient(135deg, #8b5cf6, #7c3aed)' },
  ];

  const projectPlan = [
    { stage: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', tasks: '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞, –≤—ã–±–æ—Ä —Ñ–æ—Ä–º-—Ñ–∞–∫—Ç–æ—Ä–∞, —Å–±–æ—Ä —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π', period: '–∞–ø—Ä–µ–ª—å 2025', status: 'completed' },
    { stage: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', tasks: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –∏ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞', period: '–º–∞–π 2025', status: 'completed' },
    { stage: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞', tasks: '–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ü–û —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (frontend + backend)', period: '–∏—é–Ω—å ‚Äì –∞–≤–≥—É—Å—Ç 2025', status: 'current' },
    { stage: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞', tasks: '–°–∞–π—Ç, –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–∞–º–∏', period: '–∏—é–ª—å ‚Äì —Å–µ–Ω—Ç—è–±—Ä—å 2025', status: 'current' },
    { stage: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', tasks: '–†–∞–±–æ—Ç–∞ —Å API –±–∞–Ω–∫–æ–≤ (–í–¢–ë, –ê–ª—å—Ñ–∞, –¶–µ–Ω—Ç—Ä-–ò–Ω–≤–µ—Å—Ç –∏ –¥—Ä.)', period: '—Å–µ–Ω—Ç—è–±—Ä—å ‚Äì –æ–∫—Ç—è–±—Ä—å 2025', status: 'planned' },
    { stage: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ', tasks: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, UX, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞—â–∏—Ç–µ', period: '–æ–∫—Ç—è–±—Ä—å 2025', status: 'planned' },
    { stage: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è', tasks: '–ó–∞—â–∏—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞', period: '–∫–æ–Ω–µ—Ü –æ–∫—Ç—è–±—Ä—è 2025', status: 'planned' },
  ];

  const terminalFeatures = [
    { title: 'üí≥ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã', items: ['NFC (–∫–∞—Ä—Ç—ã, —Ç–µ–ª–µ—Ñ–æ–Ω—ã)', 'QR-–∫–æ–¥—ã', '–ë–∏–æ–º–µ—Ç—Ä–∏—è (–ª–∏—Ü–æ, –æ—Ç–ø–µ—á–∞—Ç–æ–∫)'] },
    { title: 'üè¶ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–Ω–∫–∞–º–∏', items: ['–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Å–µ—Ö –±–∞–Ω–∫–æ–≤ –†–§', '–°–ë–ü –∏ —ç–∫–≤–∞–π—Ä–∏–Ω–≥', '–§–∏—Å–∫–∞–ª—å–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã', '–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –Ω–∞–ª–æ–≥–æ–≤—É—é'] },
    { title: '‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', items: ['–û—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', '–£–¥–∞–ª—ë–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞'] },
  ];

  const webServiceFeatures = [
    { title: 'üí≥ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–∞–º–∏', items: ['–ü—Ä–∏–≤—è–∑–∫–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∫–∞—Ä—Ç –ª—é–±–æ–≥–æ –±–∞–Ω–∫–∞', '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã', '–í—ã–±–æ—Ä –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ä—Ç—ã'] },
    { title: 'üîí –ë–∏–æ–º–µ—Ç—Ä–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', items: ['–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∏–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤', '–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è', '–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö'] },
    { title: 'üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', items: ['–ò—Å—Ç–æ—Ä–∏—è –æ–ø–ª–∞—Ç', '–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–æ–≤', '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏'] },
  ];

  const terminalTech = [
    { title: '–û—Å–Ω–æ–≤–Ω—ã–µ —è–∑—ã–∫–∏', desc: 'C++ / Python (RPi.GPIO, OpenCV, pySerial)' },
    { title: '–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å', desc: 'Qt (C++ –∏–ª–∏ PyQt/PySide –¥–ª—è Python)' },
    { title: '–ë–∏–æ–º–µ—Ç—Ä–∏—è', desc: 'OpenCV, dlib (Python)' },
    { title: 'API –∏ –æ–±–º–µ–Ω –¥–∞–Ω–Ω—ã–º–∏', desc: 'requests, aiohttp, httpx (Python)' },
    { title: '–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ', desc: 'SQLite / JSON-—Ñ–∞–π–ª—ã' },
    { title: '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞', desc: 'Raspberry Pi 4 / Orange Pi (ARM64, Linux)' },
  ];

  const webTech = [
    { title: 'Backend', desc: 'Python (FastAPI) –ò–õ–ò Node.js' },
    { title: 'Frontend', desc: 'JavaScript + React' },
    { title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', desc: 'JWT, OAuth2, HTTPS, OpenID Connect' },
    { title: 'API –±–∞–Ω–∫–æ–≤', desc: 'REST API + Webhooks' },
    { title: '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö', desc: 'JSON-—Ñ–∞–π–ª—ã ‚Üí PostgreSQL (–ø—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–∏)' },
    { title: '–•–æ—Å—Ç–∏–Ω–≥', desc: 'Docker + VPS / Render / Railway / Yandex Cloud' },
    { title: '–ë–∏–æ–º–µ—Ç—Ä–∏—è –≤ –≤–µ–±–µ', desc: 'WebRTC + WebAssembly' },
  ];

  const getStatusLabel = (status) => {
    switch (status) {
      case 'completed': return <span className="status-completed">‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ</span>;
      case 'current': return <span className="status-current">üîÑ –í –ø—Ä–æ—Ü–µ—Å—Å–µ</span>;
      case 'planned': return <span className="status-planned">üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ</span>;
      default: return status;
    }
  };

  return (
    <div className="dashboard">
      {/* Currency Exchange */}
      <div className="currency-card card">
        <div className="card-header">
          <div className="card-icon" style={{ background: 'linear-gradient(135deg, #3b82f6, #1d4ed8)' }}>üí±</div>
          <div className="card-title">–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç</div>
        </div>
        <div className="currency-list">
          {currencyRates.map((currency, index) => (
            <div key={index} className="currency-item">
              <div className="currency-info">
                <span className="currency-symbol" style={{ color: '#3b82f6' }}>{currency.symbol}</span>
                <span className="currency-name">{currency.name}</span>
              </div>
              <div className="currency-rate">
                <div className="rate-value">{currency.rate}</div>
                <div className={`rate-change ${currency.positive ? 'positive' : 'negative'}`}>
                  {currency.positive ? '‚Üë' : '‚Üì'} {currency.change}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Quick Actions */}
      <div className="quick-actions grid grid-4">
        {quickActions.map((action, index) => (
          <button key={index} className="action-card card">
            <div className="action-icon" style={{ background: action.color }}>
              {action.icon}
            </div>
            <div className="action-title">{action.title}</div>
            <div className="action-desc">{action.desc}</div>
          </button>
        ))}
      </div>

      {/* Project Plan */}
      <div className="plan-table card">
        <div className="table-header">
          <h2 className="table-title">üìã –ü–ª–∞–Ω —Ä–∞–±–æ—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞</h2>
        </div>
        <div className="table-container">
          <table>
            <thead>
              <tr>
                <th>–≠—Ç–∞–ø</th>
                <th>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–±–æ—Ç</th>
                <th>–°—Ä–æ–∫–∏</th>
                <th>–°—Ç–∞—Ç—É—Å</th>
              </tr>
            </thead>
            <tbody>
              {projectPlan.map((item, index) => (
                <tr key={index}>
                  <td>{item.stage}</td>
                  <td>{item.tasks}</td>
                  <td>{item.period}</td>
                  <td>{getStatusLabel(item.status)}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* Functionality */}
      <div className="functionality-section">
        <h2 className="section-title">üöÄ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±—É–¥—É—â–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞</h2>
        
        <div className="subsection">
          <h3 className="subsection-title">–ê. –¢–µ—Ä–º–∏–Ω–∞–ª –æ–ø–ª–∞—Ç—ã:</h3>
          <div className="feature-cards grid grid-3">
            {terminalFeatures.map((feature, index) => (
              <div key={index} className="feature-card card">
                <h4>{feature.title}</h4>
                <ul>
                  {feature.items.map((item, itemIndex) => (
                    <li key={itemIndex}>{item}</li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>

        <div className="subsection">
          <h3 className="subsection-title">–ë. –í–µ–±-—Å–µ—Ä–≤–∏—Å (–ø–æ —Ç–∏–ø—É –°–±–µ—Ä–±–∞–Ω–∫ –û–Ω–ª–∞–π–Ω):</h3>
          <div className="feature-cards grid grid-3">
            {webServiceFeatures.map((feature, index) => (
              <div key={index} className="feature-card card">
                <h4>{feature.title}</h4>
                <ul>
                  {feature.items.map((item, itemIndex) => (
                    <li key={itemIndex}>{item}</li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Technologies */}
      <div className="tech-section">
        <h2 className="section-title">üõ†Ô∏è –ü–µ—Ä–µ—á–µ–Ω—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π</h2>
        
        <div className="subsection">
          <h3 className="subsection-title">–ê. –î–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ü–û + GUI)</h3>
          <div className="tech-cards grid grid-3">
            {terminalTech.map((tech, index) => (
              <div key={index} className="tech-card card">
                <h4>{tech.title}</h4>
                <p>{tech.desc}</p>
              </div>
            ))}
          </div>
        </div>

        <div className="subsection">
          <h3 className="subsection-title">–ë. –î–ª—è –≤–µ–±-—Å–µ—Ä–≤–∏—Å–∞ (—Å–∞–π—Ç + –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)</h3>
          <div className="tech-cards grid grid-3">
            {webTech.map((tech, index) => (
              <div key={index} className="tech-card card">
                <h4>{tech.title}</h4>
                <p>{tech.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Dashboard; 